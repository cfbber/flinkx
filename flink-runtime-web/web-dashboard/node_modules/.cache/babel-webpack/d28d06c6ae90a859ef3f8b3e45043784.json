{"ast":null,"code":"/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport { LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let HumanizeDatePipe = /*#__PURE__*/(() => {\n  class HumanizeDatePipe {\n    constructor(locale) {\n      this.locale = locale;\n    }\n\n    transform(value, format = 'mediumDate', timezone, locale) {\n      if (value == null || value === '' || value !== value || value < 0) {\n        return '-';\n      }\n\n      try {\n        return formatDate(value, format, locale || this.locale, timezone);\n      } catch (error) {}\n    }\n\n  }\n\n  HumanizeDatePipe.ɵfac = function HumanizeDatePipe_Factory(t) {\n    return new (t || HumanizeDatePipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n  };\n\n  HumanizeDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"humanizeDate\",\n    type: HumanizeDatePipe,\n    pure: true\n  });\n  return HumanizeDatePipe;\n})();","map":null,"metadata":{},"sourceType":"module"}